class t extends EventTarget{constructor(e,s={}){if(super(),this.input="string"==typeof e?document.querySelector(e):e,!(this.input instanceof HTMLInputElement)||"file"!==this.input.type)throw new Error("CsvMapper: first argument must be a file input or selector.");this.opts=Object.assign({separator:"",enclosure:"",escape:"",guessMaxLines:25,outputSeparator:null,outputEnclosure:null,outputEscape:null,headers:!0,remap:!0,showUserControls:!0,mappingInput:null,controlsContainer:null,columns:[],autoThreshold:.8,allowUnmappedTargets:!0,beforeParse:null,beforeMap:null,afterMap:null},s||{}),this.columns=(this.opts.columns||[]).map(t=>"string"==typeof t?{name:t}:Object.assign({},t)),this.columns.forEach(t=>{t.title||(t.title=t.name)}),this.controlsEl=this._resolveNode(this.opts.controlsContainer||null)||this._autoinsertContainer(),this.mapping={},this.headers=[],this.rows=[],this.dialect={separator:",",enclosure:'"',escape:null},this._onFileChange=this._onFileChange.bind(this),this.input.addEventListener("change",this._onFileChange),t._ensureStyles()}destroy(){this.input.removeEventListener("change",this._onFileChange),this.controlsEl&&"1"===this.controlsEl.dataset.csvMapperAutocreated&&this.controlsEl.remove()}getMapping(){return Object.assign({},this.mapping)}setMapping(t){this.mapping=Object.assign({},t||{}),this.opts.showUserControls&&this._renderControls()}getHeaders(){return[...this.headers]}getRawRows(){return this.rows.map(t=>Object.assign({},t))}getDialect(){return Object.assign({},this.dialect)}validateMapping(){const t=this._validateRequiredColumns();return{isValid:0===t.length,missingRequired:t}}async _onFileChange(){const e=this.input.files&&this.input.files[0];if(!e)return;let s=await e.text();const n=new CustomEvent("beforeParse",{detail:{text:s}});this.dispatchEvent(n),"function"==typeof this.opts.beforeParse&&(s=this.opts.beforeParse(s)??s);const o=t.parseCSV(s,{headers:this.opts.headers,separator:this.opts.separator,enclosure:this.opts.enclosure,escape:this.opts.escape,guessMaxLines:this.opts.guessMaxLines});this.headers=o.headers,this.rows=o.rows,this.dialect=o.dialect,this.mapping=Object.fromEntries(this.headers.map(t=>[t,""])),this._autoMap(),this.opts.showUserControls&&this._renderControls();const a=new CustomEvent("beforeMap",{detail:{rows:this.getRawRows()}});if(this.dispatchEvent(a),"function"==typeof this.opts.beforeMap){const t=this.opts.beforeMap(this.rows);Array.isArray(t)&&(this.rows=t)}if(this.validateMapping().isValid||!this.columns.some(t=>t.required))try{const{mappedRows:t,csv:e}=this._produceOutput(),s=new CustomEvent("afterMap",{detail:{rows:t,csv:e}});this.dispatchEvent(s),"function"==typeof this.opts.afterMap&&this.opts.afterMap(t,e)}catch(t){console.warn("Initial mapping validation failed:",t)}const r=this._resolveNode(this.opts.mappingInput||null);r instanceof HTMLInputElement&&(r.value=JSON.stringify(this.mapping))}_validateRequiredColumns(){const t=[],e=new Set(Object.values(this.mapping).filter(Boolean));for(const s of this.columns)s.required&&!e.has(s.name)&&t.push(s.name);return t}_produceOutput(){const e=this._validateRequiredColumns();if(e.length>0)throw new Error(`Required columns are not mapped: ${e.join(", ")}`);const s={};for(const[t,e]of Object.entries(this.mapping)){if(!e)continue;const n=this.columns.find(t=>t.name===e);n&&(s[e]&&!0!==n.allowDuplicates||(s[e]||(s[e]=[])).push(t))}if(!Object.values(this.mapping).some(Boolean)&&!this.columns.some(t=>t.required)){const e=this.rows.map(()=>{const t={};for(const e of this.columns)t[e.name]="";return t});let s=null;if(this.opts.remap){const n=this.opts.outputSeparator??this.dialect.separator??",",o=this.opts.outputEnclosure??this.dialect.enclosure??'"',a=this.opts.outputEscape??this.dialect.escape??null,r=this.columns.map(t=>t.title||t.name),i=[t.toCsvRow(r,n,o,a)];for(const s of e){const e=this.columns.map(t=>"");i.push(t.toCsvRow(e,n,o,a))}s=i.join("\n")}return{mappedRows:e,csv:s}}const n=this.rows.map(e=>{const n={};for(const o of this.columns){const a=s[o.name]||[];let r="";for(const t of a){const s=e[t];if(null!=s&&""!==String(s)){r=s;break}}let i=r;if(o.transform)try{i=o.transform(i,e)}catch(t){console.warn("CsvMapper transform error for",o.name,t)}if(o.validate){if(!t._validate(i,o.validate)){const t=o.validationMessage||`Validation failed for ${o.title||o.name}`;(n.__errors__||(n.__errors__=[])).push({field:o.name,message:t,value:i})}}n[o.name]=i??""}return n});let o=null;if(this.opts.remap){const e=this.opts.outputSeparator??this.dialect.separator??",",s=this.opts.outputEnclosure??this.dialect.enclosure??'"',a=this.opts.outputEscape??this.dialect.escape??null,r=this.columns.map(t=>t.title||t.name),i=[t.toCsvRow(r,e,s,a)];for(const o of n){const n=this.columns.map(t=>o[t.name]);i.push(t.toCsvRow(n,e,s,a))}o=i.join("\n")}return{mappedRows:n,csv:o}}_renderControls(){const e=this.controlsEl;if(!e)return;if(!this.headers.length)return void(e.innerHTML=this._banner("No CSV loaded. Choose a file to begin."));const s=e=>{const s=new Map;return Object.values(this.mapping).forEach(t=>{t&&s.set(t,(s.get(t)||0)+1)}),['<option value="">— Ignore —</option>'].concat(this.columns.map(n=>{const o=s.get(n.name)||0,a=!(!0===n.allowDuplicates)&&n.name!==e&&o>0?"disabled":"",r=e===n.name?"selected":"",i=t.escape(n.title||n.name),l=n.required?" *":"",c=n.allowDuplicates?" (multi)":"";return`<option value="${t.escape(n.name)}" ${r} ${a}>${i}${l}${c}</option>`})).join("")},n=this.headers.map(e=>{const n=this.mapping[e]||"";return`<tr>\n        <td><strong>${t.escape(e)}</strong></td>\n        <td><select data-src="${t.escape(e)}">${s(n)}</select></td>\n      </tr>`}).join(""),o=this.validateMapping(),a=o.missingRequired.length>0?`<div class="csvm-validation-error">\n           <strong>⚠ Required columns not mapped:</strong> ${o.missingRequired.join(", ")}\n         </div>`:'<div class="csvm-validation-success">✓ All required columns are mapped</div>';e.innerHTML=`\n      <div class="csvm-card">\n        <div class="csvm-card-h">Map your columns <span class="csvm-tag">${this.rows.length} rows • sep: ${t.escape(this.dialect.separator||",")}</span></div>\n        <div class="csvm-card-b">\n          <table class="csvm-table">\n            <thead><tr><th>Your CSV header</th><th>Map to</th></tr></thead>\n            <tbody>${n}</tbody>\n          </table>\n          ${this.columns.some(t=>t.required)?a:""}\n        </div>\n      </div>`,e.querySelectorAll("select[data-src]").forEach(t=>{t.addEventListener("change",()=>{const e=t,s=e.getAttribute("data-src");s&&(this.mapping[s]=e.value),this._renderControls();const n=this.validateMapping(),o=new CustomEvent("validationChange",{detail:{isValid:n.isValid,missingRequired:n.missingRequired}});this.dispatchEvent(o);try{const{mappedRows:t,csv:e}=this._produceOutput(),s=new CustomEvent("afterMap",{detail:{rows:t,csv:e}});this.dispatchEvent(s),"function"==typeof this.opts.afterMap&&this.opts.afterMap(t,e)}catch(t){}const a=this._resolveNode(this.opts.mappingInput||null);a instanceof HTMLInputElement&&(a.value=JSON.stringify(this.mapping))})})}_banner(e){return`<div class="csvm-note">${t.escape(e)}</div>`}_autoMap(){const t=new Map;for(const e of this.headers){let s="",n=0;for(const o of this.columns){const a=t.get(o.name)||0;if(!(!0===o.allowDuplicates||0===a))continue;const r=this._matchScore(e,o);r>n&&(n=r,s=o.name)}n>=this.opts.autoThreshold&&(this.mapping[e]=s,t.set(s,(t.get(s)||0)+1))}}_matchScore(e,s){const n=t.normalize(e),o=t.normalize(s.title||""),a=t.normalize(s.name||"");let r=0;if(s.match instanceof RegExp)(s.match.test(e)||s.match.test(n))&&(r=Math.max(r,1));else if("function"==typeof s.match)try{(s.match(e)||s.match(n))&&(r=Math.max(r,1))}catch(t){}return n!==a&&n!==o||(r=Math.max(r,.98)),(n.includes(a)||n.includes(o))&&(r=Math.max(r,.9)),r=Math.max(r,.85*t.similarity(n,a)),r=Math.max(r,.85*t.similarity(n,o)),r}_resolveNode(t){return t?"string"==typeof t?document.querySelector(t):t:null}_autoinsertContainer(){if(!this.opts.showUserControls)return null;const t=document.createElement("div");return t.dataset.csvMapperAutocreated="1",this.input.insertAdjacentElement("afterend",t),t}static parseCSV(e,{headers:s=!0,separator:n="",enclosure:o="",escape:a="",guessMaxLines:r=25}={}){const i=!n,l=!o,c=""===a||null==a,p=t.detectDialect(e,{separator:i?void 0:n,enclosure:l?void 0:o,escape:c?void 0:a,guessMaxLines:r}),u=p.separator||",",h=p.enclosure||'"',d=p.escape||null,m=t._parseWithDialect(e,u,h,d);if(s){const t=m.shift()||[],e=m.map(e=>Object.fromEntries(t.map((t,s)=>[t,e[s]??""])));return{headers:t,rows:e,dialect:p}}const f=m.reduce((t,e)=>Math.max(t,e.length),0),g=Array.from({length:f},(t,e)=>`Column ${e+1}`),v=m.map(t=>Object.fromEntries(g.map((e,s)=>[e,t[s]??""])));return{headers:g,rows:v,dialect:p}}static _parseWithDialect(t,e,s,n){const o=[];let a=0,r="",i=[],l=!1;for(;a<t.length;){const c=t[a];if(l){if(n&&c===n){if(t[a+1]===s){r+=s,a+=2;continue}r+=c,a++;continue}if(c===s){l=!1,a++;continue}r+=c,a++}else c!==s?c!==e?"\n"!==c?"\r"!==c?n||c!==s||t[a+1]!==s?(r+=c,a++):(r+=s,a+=2):("\n"===t[a+1]&&a++,i.push(r),o.push(i),i=[],r="",a++):(i.push(r),o.push(i),i=[],r="",a++):(i.push(r),r="",a++):(l=!0,a++)}return i.push(r),o.push(i),o.length&&1===o[o.length-1].length&&""===o[o.length-1][0]&&o.pop(),o}static detectDialect(e,{separator:s=null,enclosure:n=null,escape:o=null,guessMaxLines:a=25}={}){const r=s?[s]:[",",";","\t","|",":"],i=n?[n]:['"',"'"],l=null!=o?[o]:[null,"\\"],c=e.split(/\r\n|\n|\r/).filter(t=>t.length>0).slice(0,a);if(0===c.length)return{separator:",",enclosure:'"',escape:null};let p={score:-1/0,sep:",",quote:'"',esc:null};for(const e of r){const s="\t"===e?"\t":e;for(const e of i)for(const n of l)try{const o=t._parseWithDialect(c.join("\n"),s,e,n).map(t=>t.length),a=t._mode(o)||0,r=o.filter(t=>t===a).length,i=a<=1?50:0,l=(c[0].match(new RegExp(t._escRe(s),"g"))||[]).length,u=100*r+5*a+l-i;u>p.score&&(p={score:u,sep:s,quote:e,esc:n})}catch(t){}}return{separator:p.sep,enclosure:p.quote,escape:p.esc}}static _mode(t){const e=new Map;let s=null,n=-1;for(const o of t){const t=(e.get(o)||0)+1;e.set(o,t),t>n&&(s=o,n=t)}return s}static _escRe(t){return t.replace(/[.*+?^${}()|[\]\\]/g,t=>`\\${t}`)}static toCsvRow(t,e=",",s='"',n=null){return t.map(t=>{let o=String(t??"");const a=o.includes(e)||o.includes("\n")||o.includes("\r")||o.includes(s);return o=n?o.split(s).join(n+s):o.split(s).join(s+s),a?s+o+s:o}).join(e)}static normalize(t){return String(t||"").toLowerCase().replace(/[_\-]/g," ").replace(/\s+/g," ").trim()}static similarity(e,s){if(e=t.normalize(e),s=t.normalize(s),!e||!s)return 0;if(e===s)return 1;const n=t=>{const e=new Map;for(let s=0;s<t.length-1;s++){const n=t.slice(s,s+2);e.set(n,(e.get(n)||0)+1)}return e},o=n(e),a=n(s);let r=0,i=0;for(const[t,e]of o)a.has(t)&&(r+=Math.min(e,a.get(t))),i+=e;for(const[,t]of a)i+=t;return 2*r/(i||1)}static _validate(t,e){if(e instanceof RegExp)return e.test(String(t));if("function"==typeof e)return!!e(t);if(e&&"object"==typeof e){const s=e.type;if("number"===s){const s=Number(String(t).replace(",","."));return!Number.isNaN(s)&&(!(null!=e.min&&s<e.min)&&!(null!=e.max&&s>e.max))}if("boolean"===s){const e=String(t).trim().toLowerCase();return["1","0","true","false","yes","no","y","n",""].includes(e)}}return!0}static _ensureStyles(){if(document.getElementById("csvm-style"))return;const t=document.createElement("style");t.id="csvm-style",t.textContent="\n      .csvm-card{background:#0d1533; color:#e7ecff; border:1px solid rgba(255,255,255,.12); border-radius:12px; overflow:hidden; box-shadow:0 10px 30px rgba(0,0,0,.25)}\n      .csvm-card-h{padding:10px 12px; border-bottom:1px solid rgba(255,255,255,.12); font-weight:600; display:flex; align-items:center; gap:10px}\n      .csvm-tag{font:12px/1.2 system-ui; background:rgba(124,156,255,.18); border:1px solid rgba(124,156,255,.35); padding:2px 8px; border-radius:999px}\n      .csvm-card-b{padding:10px 12px}\n      .csvm-table{border-collapse:collapse; width:100%; font: 13px/1.4 system-ui}\n      .csvm-table th,.csvm-table td{border-bottom:1px solid rgba(255,255,255,.12); padding:8px 10px; text-align:left}\n      .csvm-table th{color:#a8b4dc}\n      .csvm-note{margin-top:8px; color:#a8b4dc}\n      .csvm-card select{background:#0b1026; color:#e7ecff; border:1px solid rgba(255,255,255,.18); border-radius:8px; padding:6px 8px}\n      .csvm-validation-error{margin-top:12px; padding:8px 12px; background:rgba(255,99,99,.1); border:1px solid rgba(255,99,99,.3); border-radius:8px; color:#ff9999; font:13px/1.4 system-ui}\n      .csvm-validation-success{margin-top:12px; padding:8px 12px; background:rgba(99,255,99,.1); border:1px solid rgba(99,255,99,.3); border-radius:8px; color:#99ff99; font:13px/1.4 system-ui}\n    ",document.head.appendChild(t)}static escape(t){return String(null==t?"":t).replace(/[&<>"']/g,t=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"}[t]||t))}}export{t as default};
//# sourceMappingURL=csv-mapper.esm.min.js.map
