{"version":3,"file":"csv-mapper.esm.js","sources":["../src/csv-mapper.js"],"sourcesContent":["/*\r\n * CSV Mapper – ES module source (no deps)\r\n * --------------------------------------\r\n * - Auto-detects separator, enclosure (quote), and escape char (supports doubled quotes or custom escape).\r\n * - Also accepts explicit config: separator, enclosure, escape. Pass empty string/undefined to auto-detect.\r\n * - Remapped CSV output preserves detected dialect unless overridden via outputSeparator/outputEnclosure/outputEscape.\r\n *\r\n * Example:\r\n *   import CsvMapper from './src/csv-mapper.js';\r\n *   const mapper = new CsvMapper('#csv', {\r\n *     separator: '',          // auto (default)\r\n *     enclosure: '',          // auto (default)\r\n *     escape: '',             // auto (default)\r\n *     outputSeparator: null,  // null => use detected input separator\r\n *     outputEnclosure: null,  // null => use detected input enclosure\r\n *     outputEscape: null,     // null => use detected input escape (or doubling)\r\n *     columns: ['id','name','sku','qty'],\r\n *   });\r\n */\r\n\r\nexport default class CsvMapper extends EventTarget {\r\n  /**\r\n   * @param {string|HTMLInputElement} fileInput selector or element for <input type=file>\r\n   * @param {object} options\r\n   */\r\n  constructor(fileInput, options={}){\r\n    super();\r\n    this.input = typeof fileInput === 'string' ? document.querySelector(fileInput) : fileInput;\r\n    if (!(this.input instanceof HTMLInputElement) || this.input.type !== 'file') {\r\n      throw new Error('CsvMapper: first argument must be a file input or selector.');\r\n    }\r\n\r\n    this.opts = Object.assign({\r\n      // Parsing/dialect\r\n      separator: '',     // auto when falsy/empty string\r\n      enclosure: '',     // auto when falsy/empty string\r\n      escape: '',        // auto when falsy/empty string; fallback to doubling\r\n      guessMaxLines: 25, // How many lines to use for auto dialect parsing\r\n      // Output dialect for remap (null => inherit detected input; fallback comma+\")\r\n      outputSeparator: null,\r\n      outputEnclosure: null,\r\n      outputEscape: null,\r\n\r\n      // Library behavior\r\n      headers: true,\r\n      remap: true,\r\n      showUserControls: true,\r\n      mappingInput: null,           // HTMLElement | false\r\n      controlsContainer: null,      // selector | element | null\r\n      columns: [],                  // canonical column spec\r\n      autoThreshold: 0.8,\r\n      allowUnmappedTargets: true,\r\n      beforeParse: null,\r\n      beforeMap: null,\r\n      afterMap: null,\r\n    }, options || {});\r\n\r\n    this.columns = (this.opts.columns || []).map(c => typeof c === 'string' ? { name:c } : Object.assign({}, c));\r\n    this.columns.forEach(c => { if (!c.title) c.title = c.name; });\r\n\r\n    this.controlsEl = this._resolveNode(this.opts.controlsContainer) || this._autoinsertContainer();\r\n    this.mapping = {};   // sourceHeader -> targetName\r\n    this.headers = [];\r\n    this.rows = [];\r\n    this.dialect = { separator: ',', enclosure: '\"', escape: null };\r\n\r\n    this._onFileChange = this._onFileChange.bind(this);\r\n    this.input.addEventListener('change', this._onFileChange);\r\n\r\n    CsvMapper._ensureStyles();\r\n  }\r\n\r\n  destroy(){\r\n    this.input.removeEventListener('change', this._onFileChange);\r\n    if (this.controlsEl && this.controlsEl.dataset.csvMapperAutocreated === '1') this.controlsEl.remove();\r\n  }\r\n\r\n  // ===== Public API =====\r\n  getMapping(){ return Object.assign({}, this.mapping); }\r\n  setMapping(map){ this.mapping = Object.assign({}, map||{}); if (this.opts.showUserControls) this._renderControls(); }\r\n  getHeaders(){ return [...this.headers]; }\r\n  getRawRows(){ return this.rows.map(r=>Object.assign({}, r)); }\r\n  getDialect(){ return Object.assign({}, this.dialect); }\r\n\r\n  async _onFileChange(){\r\n    const file = this.input.files && this.input.files[0];\r\n    if (!file) return;\r\n    let text = await file.text();\r\n\r\n    const bpEvent = new CustomEvent('beforeParse', { detail: { text } });\r\n    this.dispatchEvent(bpEvent);\r\n    if (typeof this.opts.beforeParse === 'function') {\r\n      text = this.opts.beforeParse(text) ?? text;\r\n    }\r\n\r\n    const parsed = CsvMapper.parseCSV(text, {\r\n      headers: this.opts.headers,\r\n      separator: this.opts.separator,\r\n      enclosure: this.opts.enclosure,\r\n      escape: this.opts.escape,\r\n      guessMaxLines: this.opts.guessMaxLines,\r\n    });\r\n    this.headers = parsed.headers;\r\n    this.rows = parsed.rows;\r\n    this.dialect = parsed.dialect;\r\n\r\n    this.mapping = Object.fromEntries(this.headers.map(h=>[h,'']));\r\n    this._autoMap();\r\n\r\n    if (this.opts.showUserControls) this._renderControls();\r\n\r\n    const bmEvent = new CustomEvent('beforeMap', { detail: { rows: this.getRawRows() } });\r\n    this.dispatchEvent(bmEvent);\r\n    if (typeof this.opts.beforeMap === 'function') {\r\n      const maybe = this.opts.beforeMap(this.rows);\r\n      if (Array.isArray(maybe)) this.rows = maybe;\r\n    }\r\n\r\n    const { mappedRows, csv } = this._produceOutput();\r\n\r\n    const amEvent = new CustomEvent('afterMap', { detail: { rows: mappedRows, csv } });\r\n    this.dispatchEvent(amEvent);\r\n    if (typeof this.opts.afterMap === 'function') {\r\n      this.opts.afterMap(mappedRows, csv);\r\n    }\r\n\r\n    const mappingInput = this._resolveNode(this.opts.mappingInput);\r\n    if (mappingInput instanceof HTMLInputElement) {\r\n      mappingInput.value = JSON.stringify(this.mapping);\r\n    }\r\n  }\r\n\r\n  _produceOutput(){\r\n    const targetToSource = {};\r\n    for (const [src, tgt] of Object.entries(this.mapping)) {\r\n      if (!tgt) continue;\r\n      const spec = this.columns.find(c=>c.name===tgt);\r\n      if (!spec) continue;\r\n      if (targetToSource[tgt] && spec.allowDuplicates !== true) continue;\r\n      (targetToSource[tgt] ||= []).push(src);\r\n    }\r\n\r\n    const mappedRows = this.rows.map((row) => {\r\n      const out = {};\r\n      for (const spec of this.columns) {\r\n        const srcHeaders = targetToSource[spec.name] || [];\r\n        let raw = '';\r\n        for (const h of srcHeaders) {\r\n          const v = row[h];\r\n          if (v != null && String(v) !== '') { raw = v; break; }\r\n        }\r\n        let val = raw;\r\n        if (spec.transform) { try { val = spec.transform(val, row); } catch(e){ console.warn('CsvMapper transform error for', spec.name, e); } }\r\n        if (spec.validate) {\r\n          const ok = CsvMapper._validate(val, spec.validate);\r\n          if (!ok) {\r\n            const msg = spec.validationMessage || `Validation failed for ${spec.title||spec.name}`;\r\n            (out.__errors__ ||= []).push({ field: spec.name, message: msg, value: val });\r\n          }\r\n        }\r\n        out[spec.name] = val ?? '';\r\n      }\r\n      return out;\r\n    });\r\n\r\n    let csv = null;\r\n    if (this.opts.remap) {\r\n      const outSep = this.opts.outputSeparator ?? this.dialect.separator ?? ',';\r\n      const outQuote = this.opts.outputEnclosure ?? this.dialect.enclosure ?? '\"';\r\n      const outEsc = this.opts.outputEscape ?? this.dialect.escape ?? null;\r\n      const headerRow = this.columns.map(c=>c.title||c.name);\r\n      const lines = [CsvMapper.toCsvRow(headerRow, outSep, outQuote, outEsc)];\r\n      for (const r of mappedRows) {\r\n        const arr = this.columns.map(c=> r[c.name]);\r\n        lines.push(CsvMapper.toCsvRow(arr, outSep, outQuote, outEsc));\r\n      }\r\n      csv = lines.join('\\n');\r\n    }\r\n    return { mappedRows, csv };\r\n  }\r\n\r\n  // ===== UI =====\r\n  _renderControls(){\r\n    const el = this.controlsEl; if (!el) return;\r\n    if (!this.headers.length) { el.innerHTML = this._banner('No CSV loaded. Choose a file to begin.'); return; }\r\n\r\n    const selectOptions = (currentTargetName)=>{\r\n      const taken = new Map();\r\n      Object.values(this.mapping).forEach(n => { if (!n) return; taken.set(n, (taken.get(n)||0)+1); });\r\n      return ['<option value=\"\">— Ignore —</option>']\r\n        .concat(this.columns.map(spec => {\r\n          const count = taken.get(spec.name)||0;\r\n          const dupAllowed = spec.allowDuplicates === true;\r\n          const disabled = !dupAllowed && spec.name !== currentTargetName && count > 0 ? 'disabled' : '';\r\n          const sel = currentTargetName === spec.name ? 'selected' : '';\r\n          const title = CsvMapper.escape(spec.title || spec.name);\r\n          return `<option value=\"${CsvMapper.escape(spec.name)}\" ${sel} ${disabled}>${title}${spec.allowDuplicates?' (multi)':''}</option>`;\r\n        })).join('');\r\n    };\r\n\r\n    const bodyRows = this.headers.map(h => {\r\n      const current = this.mapping[h] || '';\r\n      return `<tr>\r\n        <td><strong>${CsvMapper.escape(h)}</strong></td>\r\n        <td><select data-src=\"${CsvMapper.escape(h)}\">${selectOptions(current)}</select></td>\r\n      </tr>`;\r\n    }).join('');\r\n\r\n    el.innerHTML = `\r\n      <div class=\"csvm-card\">\r\n        <div class=\"csvm-card-h\">Map your columns <span class=\"csvm-tag\">${this.rows.length} rows • sep: ${CsvMapper.escape(this.dialect.separator || ',')}</span></div>\r\n        <div class=\"csvm-card-b\">\r\n          <table class=\"csvm-table\">\r\n            <thead><tr><th>Your CSV header</th><th>Map to</th></tr></thead>\r\n            <tbody>${bodyRows}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>`;\r\n\r\n    el.querySelectorAll('select[data-src]').forEach(sel => {\r\n      sel.addEventListener('change', () => {\r\n        const src = sel.getAttribute('data-src');\r\n        this.mapping[src] = sel.value;\r\n        this._renderControls();\r\n        \r\n        // Trigger afterMap event when mapping changes\r\n        const { mappedRows, csv } = this._produceOutput();\r\n        const amEvent = new CustomEvent('afterMap', { detail: { rows: mappedRows, csv } });\r\n        this.dispatchEvent(amEvent);\r\n        if (typeof this.opts.afterMap === 'function') {\r\n          this.opts.afterMap(mappedRows, csv);\r\n        }\r\n\r\n        // Update mapping input\r\n        const mappingInput = this._resolveNode(this.opts.mappingInput);\r\n        if (mappingInput instanceof HTMLInputElement) {\r\n          mappingInput.value = JSON.stringify(this.mapping);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _banner(text){ return `<div class=\"csvm-note\">${CsvMapper.escape(text)}</div>`; }\r\n\r\n  // ===== Auto mapping =====\r\n  _autoMap(){\r\n    const used = new Map();\r\n    for (const src of this.headers) {\r\n      let best = ''; let score = 0;\r\n      for (const spec of this.columns) {\r\n        const count = used.get(spec.name)||0;\r\n        const canUse = spec.allowDuplicates === true || count === 0;\r\n        if (!canUse) continue;\r\n        const s = this._matchScore(src, spec);\r\n        if (s > score) { score = s; best = spec.name; }\r\n      }\r\n      if (score >= this.opts.autoThreshold) {\r\n        this.mapping[src] = best;\r\n        used.set(best, (used.get(best)||0)+1);\r\n      }\r\n    }\r\n  }\r\n\r\n  _matchScore(srcHeader, spec){\r\n    const norm = CsvMapper.normalize(srcHeader);\r\n    const title = CsvMapper.normalize(spec.title||'');\r\n    const name  = CsvMapper.normalize(spec.name||'');\r\n    let score = 0;\r\n    if (spec.match instanceof RegExp) {\r\n      if (spec.match.test(srcHeader) || spec.match.test(norm)) score = Math.max(score, 1.0);\r\n    } else if (typeof spec.match === 'function') {\r\n      try { if (spec.match(srcHeader) || spec.match(norm)) score = Math.max(score, 1.0); } catch(e){}\r\n    }\r\n    if (norm === name || norm === title) score = Math.max(score, 0.98);\r\n    if (norm.includes(name) || norm.includes(title)) score = Math.max(score, 0.9);\r\n    score = Math.max(score, CsvMapper.similarity(norm, name) * 0.85);\r\n    score = Math.max(score, CsvMapper.similarity(norm, title) * 0.85);\r\n    return score;\r\n  }\r\n\r\n  // ===== Helpers =====\r\n  _resolveNode(ref){ if (!ref) return null; if (typeof ref === 'string') return document.querySelector(ref); return ref; }\r\n  _autoinsertContainer(){ if (!this.opts.showUserControls) return null; const d=document.createElement('div'); d.dataset.csvMapperAutocreated='1'; this.input.insertAdjacentElement('afterend', d); return d; }\r\n\r\n  // ---------- CSV core ----------\r\n  static parseCSV(text, { headers=true, separator='', enclosure='', escape='', guessMaxLines=25 }={}){\r\n    const needSep = !separator;\r\n    const needQuote = !enclosure;\r\n    const needEsc = escape === '' || escape == null;\r\n    const dialect = CsvMapper.detectDialect(text, {\r\n      separator: needSep ? null : separator,\r\n      enclosure: needQuote ? null : enclosure,\r\n      escape: needEsc ? null : escape,\r\n      guessMaxLines\r\n    });\r\n    const sep = dialect.separator || ',';\r\n    const quote = dialect.enclosure || '\"';\r\n    const esc = dialect.escape || null;\r\n\r\n    const rows = CsvMapper._parseWithDialect(text, sep, quote, esc);\r\n\r\n    if (headers) {\r\n      const head = rows.shift() || [];\r\n      const objs = rows.map(arr => Object.fromEntries(head.map((h,idx)=>[h, arr[idx] ?? ''])));\r\n      return { headers: head, rows: objs, dialect };\r\n    }\r\n    const maxLen = rows.reduce((m,a)=>Math.max(m,a.length),0);\r\n    const head = Array.from({length:maxLen}, (_,i)=>`Column ${i+1}`);\r\n    const objs = rows.map(arr => Object.fromEntries(head.map((h,idx)=>[h, arr[idx] ?? ''])));\r\n    return { headers: head, rows: objs, dialect };\r\n  }\r\n\r\n  static _parseWithDialect(text, sep, quote, esc){\r\n    const rows = [];\r\n    let i=0, f='', r=[], inQuotes=false;\r\n    while (i < text.length) {\r\n      const c = text[i];\r\n      if (inQuotes) {\r\n        if (esc && c === esc) {\r\n          const nxt = text[i+1];\r\n          if (nxt === quote) { f += quote; i += 2; continue; }\r\n          f += c; i++; continue;\r\n        }\r\n        if (c === quote) { inQuotes = false; i++; continue; }\r\n        f += c; i++; continue;\r\n      }\r\n      if (c === quote) { inQuotes = true; i++; continue; }\r\n      if (c === sep) { r.push(f); f=''; i++; continue; }\r\n      if (c === '\\n') { r.push(f); rows.push(r); r=[]; f=''; i++; continue; }\r\n      if (c === '\\r') { if (text[i+1] === '\\n') { i++; } r.push(f); rows.push(r); r=[]; f=''; i++; continue; }\r\n      if (!esc && c === quote && text[i+1] === quote) { f += quote; i += 2; continue; }\r\n      f += c; i++;\r\n    }\r\n    r.push(f); rows.push(r);\r\n    if (rows.length && rows[rows.length-1].length===1 && rows[rows.length-1][0]==='') rows.pop();\r\n    return rows;\r\n  }\r\n\r\n  static detectDialect(text, { separator=null, enclosure=null, escape=null, guessMaxLines=25 }={}){\r\n    const seps = separator ? [separator] : [',',';','\\t','|',':'];\r\n    const quotes = enclosure ? [enclosure] : ['\"', \"'\"];\r\n    const escapes = escape != null ? [escape] : [null, '\\\\'];\r\n\r\n    const lines = text.split(/\\r\\n|\\n|\\r/).filter(l=>l.length>0).slice(0, guessMaxLines);\r\n    if (lines.length === 0) return { separator: ',', enclosure: '\"', escape: null };\r\n\r\n    let best = { score: -Infinity, sep: ',', quote: '\"', esc: null };\r\n\r\n    for (const s of seps) {\r\n      const sep = s === '\\t' ? '\\t' : s;\r\n      for (const q of quotes) {\r\n        for (const e of escapes) {\r\n          try {\r\n            const sampleRows = CsvMapper._parseWithDialect(lines.join('\\n'), sep, q, e);\r\n            const counts = sampleRows.map(r=>r.length);\r\n            const mode = CsvMapper._mode(counts);\r\n            const consistent = counts.filter(c=>c===mode).length;\r\n            const penalty = mode <= 1 ? 50 : 0;\r\n            const sepHits = (lines[0].match(new RegExp(CsvMapper._escRe(sep), 'g'))||[]).length;\r\n            const score = consistent*100 + mode*5 + sepHits - penalty;\r\n            if (score > best.score) best = { score, sep, quote:q, esc:e };\r\n          } catch(err){ /* ignore */ }\r\n        }\r\n      }\r\n    }\r\n    return { separator: best.sep, enclosure: best.quote, escape: best.esc };\r\n  }\r\n\r\n  static _mode(arr){ const m=new Map(); let best=null,bestC=-1; for(const v of arr){const c=(m.get(v)||0)+1; m.set(v,c); if(c>bestC){best=v;bestC=c;}} return best; }\r\n  static _escRe(s){ return s.replace(/[.*+?^${}()|[\\]\\\\]/g, r=>`\\\\${r}`); }\r\n\r\n  static toCsvRow(arr, sep=',', quote='\"', esc=null){\r\n    return arr.map(v=>{\r\n      let s = String(v ?? '');\r\n      const needsQuote = s.includes(sep) || s.includes('\\n') || s.includes('\\r') || s.includes(quote);\r\n      if (esc) s = s.split(quote).join(esc + quote); else s = s.split(quote).join(quote + quote);\r\n      return needsQuote ? quote + s + quote : s;\r\n    }).join(sep);\r\n  }\r\n\r\n  static normalize(s){ return String(s||'').toLowerCase().replace(/[_\\-]/g,' ').replace(/\\s+/g,' ').trim(); }\r\n  static similarity(a,b){\r\n    a = CsvMapper.normalize(a); b = CsvMapper.normalize(b);\r\n    if (!a || !b) return 0; if (a===b) return 1;\r\n    const grams = str => { const m=new Map(); for(let i=0;i<str.length-1;i++){const g=str.slice(i,i+2); m.set(g,(m.get(g)||0)+1);} return m; };\r\n    const A=grams(a), B=grams(b);\r\n    let inter=0, total=0; for (const [g,c] of A){ if (B.has(g)) inter+=Math.min(c,B.get(g)); total+=c; } for (const [,c] of B) total+=c; return (2*inter)/(total||1);\r\n  }\r\n\r\n  static _validate(v, validator){\r\n    if (validator instanceof RegExp) return validator.test(String(v));\r\n    if (typeof validator === 'function') return !!validator(v);\r\n    if (validator && typeof validator === 'object'){\r\n      const t = validator.type;\r\n      if (t === 'number') {\r\n        const num = Number(String(v).replace(',','.'));\r\n        if (Number.isNaN(num)) return false;\r\n        if (validator.min != null && num < validator.min) return false;\r\n        if (validator.max != null && num > validator.max) return false;\r\n        return true;\r\n      }\r\n      if (t === 'boolean') {\r\n        const s = String(v).trim().toLowerCase();\r\n        return ['1','0','true','false','yes','no','y','n',''].includes(s);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _ensureStyles(){\r\n    if (document.getElementById('csvm-style')) return;\r\n    const css = `\r\n      .csvm-card{background:#0d1533; color:#e7ecff; border:1px solid rgba(255,255,255,.12); border-radius:12px; overflow:hidden; box-shadow:0 10px 30px rgba(0,0,0,.25)}\r\n      .csvm-card-h{padding:10px 12px; border-bottom:1px solid rgba(255,255,255,.12); font-weight:600; display:flex; align-items:center; gap:10px}\r\n      .csvm-tag{font:12px/1.2 system-ui; background:rgba(124,156,255,.18); border:1px solid rgba(124,156,255,.35); padding:2px 8px; border-radius:999px}\r\n      .csvm-card-b{padding:10px 12px}\r\n      .csvm-table{border-collapse:collapse; width:100%; font: 13px/1.4 system-ui}\r\n      .csvm-table th,.csvm-table td{border-bottom:1px solid rgba(255,255,255,.12); padding:8px 10px; text-align:left}\r\n      .csvm-table th{color:#a8b4dc}\r\n      .csvm-note{margin-top:8px; color:#a8b4dc}\r\n      .csvm-card select{background:#0b1026; color:#e7ecff; border:1px solid rgba(255,255,255,.18); border-radius:8px; padding:6px 8px}\r\n    `;\r\n    const style = document.createElement('style'); style.id = 'csvm-style'; style.textContent = css; document.head.appendChild(style);\r\n  }\r\n\r\n  static escape(s){ return String(s == null ? '' : s).replace(/[&<>\"']/g, c => ({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;','\\'':'&#39;'}[c])); }\r\n}"],"names":[],"mappings":"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"}